// Generated by CoffeeScript 1.3.3
var tknzr;

tknzr = (function() {
  var tokens;

  function tknzr() {}

  tokens = function() {
    var c, from, i, length, make, n, result, str, _ref;
    i = 0;
    length = (_ref = typeof this !== "undefined" && this !== null ? this.length : void 0) != null ? _ref : 0;
    result = [];
    make = function(type, value) {
      return {
        type: type,
        value: value,
        from: from,
        to: i,
        toString: function() {
          return value.toString();
        }
      };
    };
    if (!(typeof this !== "undefined" && this !== null)) {
      return void 0;
    }
    c = this.charAt(i);
    while (c) {
      from = i;
      if (c === ' ') {
        i += 1;
        c = this.charAt(i);
      } else if (/[a-zA-Z]/.test(c)) {
        str = c;
        i += 1;
        while (true) {
          c = this.charAt(i);
          if (/[0-9a-zA-Z]/.test) {
            str += c;
            i += 1;
          } else {
            break;
          }
        }
        result.push(make('var', str));
      } else if (/[0-9]/.test(c)) {
        str = c;
        i += 1;
        while (true) {
          c = this.charAt(i);
          if (!/[0-9]/.test(c)) {
            break;
          }
          i += 1;
          str += c;
        }
        if (/[a-zA-Z]/.test(c)) {
          str += c;
          i += 1;
          throw 'Bad number';
        }
        n = parseInt(str);
        if (isFinite(n)) {
          result.push(make('number', n));
        } else {
          throw 'Bad number';
        }
      } else {
        i += 1;
        result.push(make('operator', c));
        c = this.charAt(i);
      }
    }
    return result;
  };

  tknzr.tokenize = function(input) {
    return tokens.call(input);
  };

  return tknzr;

})();

module.exports = tknzr;
