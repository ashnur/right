"use strict"
void function(root){

    function tokens(){

        if ( typeof this === "undefined" ||  this === null) {
            return
        }

        var c, from, i=0
            , length, n
            , result = []
            , str, _ref
            ;

        length = typeof this !== "undefined" && this !== null ? this.length : 0

        function make(type, value){
            return {
                type: type,
                value: value,
                from: from,
                to: i,
                toString: function(){
                    return value.toString()
                }
            }
        }

        c = this.charAt(i)

        while ( c ) {
            from = i
            if ( c === ' ' ) {
                i += 1
                c = this.charAt(i)
            } else if ( /[a-zA-Z]/.test(c) ) {
                str = c
                i += 1
                while ( true ) {
                    c = this.charAt(i)
                    if ( /[0-9a-zA-Z]/.test(c) ) {
                        str += c
                        i += 1
                    } else {
                        break
                    }
                }
                result.push(make('var', str))
            } else if ( /[0-9]/.test(c) ) {
                str = c
                i += 1
                while ( true ) {
                    c = this.charAt(i)
                    if ( !/[0-9]/.test(c) ) {
                        break
                    }
                    i += 1
                    str += c
                }
                if ( /[a-zA-Z]/.test(c) ) {
                    str += c
                    i += 1
                    throw 'Bad number'
                }
                n = parseInt(str)
                if ( isFinite(n) ) {
                    result.push(make('number', n))
                } else {
                    throw 'Bad number'
                }
            } else {
                i += 1
                result.push(make('operator', c))
                c = this.charAt(i)
            }
        }
        return result
    }

    function tknzr(){}

    tknzr.tokenize = function(input){
        return tokens.call(input)
    }

    if ( typeof module != 'undefined' && module.exports ) {
        module.exports = tknzr
    } else {
        root.factory = tknzr
    }

}(this)
