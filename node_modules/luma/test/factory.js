suite('factory')

var factory = require('../').factory
  , a       = require('assert')
  , sinon   = require('sinon')


test('returned factory', function(){

    var proto = { x: 3 }
      , f     = factory(proto)

    a.equal(f.prototype, proto)
})

test('basic prototype setting', function(){
    
    var proto = { x: 3 }
      , o     = factory(proto)()

    a.equal(Object.getPrototypeOf(o), proto)
})

test('prototype behaves the same as constructor\'s prototype', function(){

    var proto = { x: 3 }
      , f     = factory(proto)
    f.prototype = { x: 4 }

    var o = f()
    a.equal(o.x, 4)
})

test('init function', function(){
    
    var proto = { 
            init: function(){ this.x = 3; return this }
        }
      , o     = factory(proto)()

    a.equal(o.x, 3)
})

test('init with arguments', function(){
    
    var proto = { init: sinon.spy() }
      , o     = factory(proto)(1, 2, 3)

    a.ok(proto.init.calledWith(1, 2, 3))
})

